[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Олег\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Олег\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 11.0.8)
[debug]       Load.loadUnit: plugins took 127.9227ms
[debug]       Load.loadUnit: defsScala took 0.5001ms
[debug] [Loading] Scanning directory C:\Users\Олег\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Олег\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.3066 ms
[debug]           Load.resolveProject(global-plugins) took 48.8108ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Олег\.sbt\1.0\plugins, plugins: List(<none>))) took 93.8289ms
[debug] [Loading] Done in C:\Users\Олег\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 115.1997ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2534ms
[debug]     Load.loadUnit(file:/C:/Users/Олег/.sbt/1.0/plugins/, ...) took 253.8785ms
[debug]   Load.apply: load took 576.8379ms
[debug]   Load.apply: resolveProjects took 15.3124ms
[debug]   Load.apply: finalTransforms took 72.5248ms
[debug]   Load.apply: config.delegates took 19.6663ms
[debug]   Load.apply: Def.make(settings)... took 2253.0204ms
[debug]   Load.apply: structureIndex took 93.1087ms
[debug]   Load.apply: mkStreams took 1.3281ms
[info] loading global plugins from C:\Users\Олег\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8574.9254ms
[debug]           Load.loadUnit: plugins took 28.152ms
[debug]           Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory D:\Projects\Scala Projects\project
[debug]             Load.loadUnit: mkEval took 6.3983ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Projects\Scala Projects\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3736 ms
[info] loading settings for project scala-projects-build from idea.sbt ...
[debug]               Load.resolveProject(scala-projects-build) took 13.2223ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-projects-build, base: D:\Projects\Scala Projects\project, plugins: List(<none>))) took 15.5107ms
[debug] [Loading] Done in D:\Projects\Scala Projects\project, returning: (scala-projects-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3071.6444ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.017ms
[debug]         Load.loadUnit(file:/D:/Projects/Scala%20Projects/project/, ...) took 3105.5784ms
[debug]       Load.apply: load took 3107.1422ms
[debug]       Load.apply: resolveProjects took 0.1103ms
[debug]       Load.apply: finalTransforms took 20.7891ms
[debug]       Load.apply: config.delegates took 0.581ms
[debug]       Load.apply: Def.make(settings)... took 97.3545ms
[debug]       Load.apply: structureIndex took 26.9754ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from D:\Projects\Scala Projects\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 17180.9466ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory D:\Projects\Scala Projects
[debug]       Load.loadUnit: mkEval took 0.2752ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Projects\Scala Projects, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.395 ms
[info] loading settings for project scala-projects from build.sbt ...
[debug]         Load.resolveProject(scala-projects) took 82.0781ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala-projects, base: D:\Projects\Scala Projects, plugins: List(<none>))) took 87.414ms
[debug] [Loading] Done in D:\Projects\Scala Projects, returning: (scala-projects)
[debug]     Load.loadUnit: loadedProjectsRaw took 1663.5895ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.4059ms
[debug]   Load.loadUnit(file:/D:/Projects/Scala%20Projects/, ...) took 18855.5335ms
[debug] Load.apply: load took 18857.2351ms
[debug] Load.apply: resolveProjects took 0.0938ms
[debug] Load.apply: finalTransforms took 54.3628ms
[debug] Load.apply: config.delegates took 3.1288ms
[debug] Load.apply: Def.make(settings)... took 148.0314ms
[debug] Load.apply: structureIndex took 46.8592ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to Scala Projects (in build file:/D:/Projects/Scala%20Projects/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49644 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49644, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala Projects (in build file:/D:/Projects/Scala%20Projects/)
[debug] > Exec(idea-shell, None, None)
